<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" title="Manage Linked Signs"
			   width="750" height="640"
			   close="handleCloseEvent()"
			   creationComplete="init()"
			   skinClass="skins.MavricTitleWindowSkin" xmlns:ddot="com.transcendss.mavric.views.ddot.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import spark.skins.mobile.TextInputSkin;
			
			public var inspectionEditedCallback:Function;
			
			[Bindable]
			private var currentSignDG:ArrayCollection = new ArrayCollection([
				{signType:"Stop", arrowDirection:'left', measure:5, supportID:'3'}
			]);
			
			[Bindable] 
			private var dummyDG:ArrayCollection = new ArrayCollection([
				{linked:true, signType:"Stop", arrowDirection:'', measure:'', supportID:''}, 
				{linked:false, signType:"Loading Zone", arrowDirection:'left', measure:1, supportID:'1'},
				{linked:true, signType:"Loading Zone", arrowDirection:'right', measure:2, supportID:'2'},
				{linked:true, signType:"Stop", arrowDirection:'', measure:'', supportID:''}, 
				{linked:false, signType:"Loading Zone", arrowDirection:'left', measure:1, supportID:'1'},
				{linked:true, signType:"Loading Zone", arrowDirection:'right', measure:2, supportID:'2'}
			]);    
			
			
			private function init():void
			{
				try
				{
					
				}
				catch(err:Error)
				{
					FlexGlobals.topLevelApplication.TSSAlert(err.getStackTrace());		
				}
			}
			
			protected function handleCloseEvent():void
			{
				PopUpManager.removePopUp(this);
			}
			
			
			protected function SaveHandler(event:MouseEvent):void
			{
				try
				{
					PopUpManager.removePopUp(this);
				}
				catch(err:Error)
				{
					FlexGlobals.topLevelApplication.TSSAlert("Please fill out all fields."); //err.getStackTrace()
				}
			}
			
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		
		
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout verticalAlign="top"/>
	</s:layout>
	<s:VGroup gap="15" width="100%" horizontalAlign="left" paddingTop="10" paddingLeft="20" paddingRight="20">
		
		<s:Spacer height="10"/>
		<s:Label text="Current Sign:" fontWeight="bold"/>
		<s:DataGrid id="currentSignGrid" 
					width="100%" height="60"
					verticalScrollPolicy="off"
					dataProvider="{currentSignDG}"/>
		
		<s:Spacer height="20"/>
		<s:Label text="Potential Matched Sign:" fontWeight="bold"/>
		<s:DataGrid id="otherSignsGrid" 
					width="100%" height="300"
				    verticalScrollPolicy="auto"
					dataProvider="{dummyDG}">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn editable="false" headerText="Linked">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer>
									<s:CheckBox selected="@{data.linked}"/>
								</s:GridItemRenderer>
								
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn dataField="signType" headerText="Sign Type"/>
					<s:GridColumn dataField="arrowDirection" headerText="Arrow Direction"/>
					<s:GridColumn dataField="measure" headerText="Measure">
					</s:GridColumn>
					<s:GridColumn dataField="supportID" headerText="Support ID"/>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<s:Spacer height="20"/>
		<s:VGroup width="100%" horizontalAlign="center" >
			<s:HGroup verticalAlign="middle">
				<s:Label text="Zone ID" fontWeight="bold"/>
				<s:TextInput editable="true" skinClass="spark.skins.mobile.TextInputSkin" width="120"/>
				<s:Spacer width="40"/>
				<s:Button label="Save"  width="100" height="35" click="SaveHandler(event)"/>
				<s:Spacer width="20"/>
				<s:Button label="Cancel" width="100" height="35" click="handleCloseEvent()"/>
			</s:HGroup>
		</s:VGroup>	
	</s:VGroup>	
	
		
</s:TitleWindow>
